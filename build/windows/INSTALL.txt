Building Rem in Windows XP Service Pack 2
=========================================

1) Install Microsoft Visual C++ 2008 Express Edition
----------------------------------------------------

Free download from here:
http://www.microsoft.com/express/download/

It is recommended to download the "Offline Install DVD", available at the bottom of the page. You only need to install the C++ IDE and libraries from that DVD.



2) Download and install QuickTime for Windows
---------------------------------------------

JUCE depends on the QuickTime libraries for displaying media files. You can download and install QuickTime from this address:
http://www.apple.com/quicktime/download/



3) Install the ASIO SDK
-----------------------

Juce requires this SDK to be available. Follow the instructions in this forum post:
http://www.rawmaterialsoftware.com/juceforum/viewtopic.php?p=12107&highlight=&sid=1a6b77fdef10736f25f1dc05caecb4c9#12107

The ASIO drivers can be downloaded from here:
http://www.steinberg.net/324+M52087573ab0.html

In that page, follow the link at the bottom, agree to the end-user license agreement and fill the form to access the download link. Install the libraries in "C:\ASIOSDK2\".



4) Checkout and build POCO
--------------------------

POCO is bundled with the file "lib\poco\Foundation\Foundation_vs80.sln" which can be opened with Visual C++ 2008 Express Edition (you will be asked to upgrade it to the Visual Studio 2008 format). Right click on the project and select "Build", in each of the four available configurations. The generated libraries will be generated in "lib\poco\lib" and the DLLs will be installed in "lib\poco\bin".



5) Build JUCE
-------------

JUCE is bundled with a Visual Studio solution, that can be used to build the library. Open the "lib\juce\build\win32\vc8\JUCE.sln" file (you will be asked to upgrade it to the Visual Studio 2008 format) and right-click on the JUCE project inside. Go to "Configuration Properties - C/C++ - General" and modify the the "Additional Include Directories" to the value: 
"C:\Program Files\QuickTime";"C:\ASIOSDK2\common".
Right-click on the project and select "Build", in both Release and Debug configurations.



6) Install CppUnit
------------------

Download http://downloads.sourceforge.net/cppunit/cppunit-1.12.1.tar.gz and unzip it into:
"C:\cppunit-1.12.1"
Open the "C:\cppunit-1.12.0\src\CppUnitLibraries.sln" file and build the "cppunit" project. The resulting libraries are stored at "C:\cppunit-1.12.0\lib".



7) Install SQLite
-----------------

Download the precompiled DLL for Windows here:
http://www.sqlite.org/sqlitedll-3_5_8.zip
Unzip it and install the files "sqlite3.dll" and "sqlite3.def" in "lib/sqlite".



8) Generate the DEF from the SQLite DLL
---------------------------------------

In order to use the DLL from within Rem, you need to generate a DEF file out of it. To do this, follow the instructions at:
http://support.microsoft.com/kb/131313

  a) "cd lib\sqlite"
  b) "LIB /DEF:sqlite.def"
  
This will generate the "sqlite3.exp" file required by the Rem Visual Studio solution.



9) Install CMake 2.6
--------------------

There is an installer available here:
http://www.cmake.org/files/v2.6/cmake-2.6.0-win32-x86.exe



10) Install NSIS 2.37
---------------------

NSIS (Nullsoft Scriptable Install System) is used by CMake to generate installers for Windows. You can download it from here:
http://prdownloads.sourceforge.net/nsis/nsis-2.37-setup.exe?download



11) Build Rem in Visual Studio
------------------------------

Open the "build\windows\Rem.sln" file and select "Build".



12) Build Rem using CMake
-------------------------

To be done.


